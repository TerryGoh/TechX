{"version":3,"sources":["logo.svg","model/Database.js","views/CourseCategories.js","components/SideMenuLayout.js","components/CustomTriggerMenu.js","App.js","reportWebVitals.js","index.js"],"names":["initialDbState","data","isLoading","isLoaded","errCode","reducer","state","action","type","payload","Error","useReducer","CourseCategories","getCategories","dispatch","axios","get","then","response","catch","error","console","DB","SubMenu","Menu","Sider","Layout","Header","Content","CourseCategoriesView","useState","setState","dbState","useEffect","uiObjList","jsonArray","id","keys","map","item","Object","key","toString","txt","createIUObj","title","width","className","mode","defaultSelectedKeys","defaultOpenKeys","style","height","borderRight","Search","Input","onSearch","AudioOutlined","value","log","handleClick","e","SideMenuLayout","theme","onClick","Item","placeholder","allowClear","marginTop","padding","margin","React","Component","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3eca7cf0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nimport axios from \"axios\";\r\n\r\nimport  { useReducer } from \"react\";\r\n\r\nconst initialDbState = {\r\n    data: null,\r\n    isLoading: false,\r\n    isLoaded: false,\r\n    errCode : true,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"GET_CATEGORIES_REQUEST\":\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                isLoaded: false,\r\n                errCode: action.type ,\r\n            };\r\n        case \"GET_CATEGORIES_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isLoaded: true,\r\n                data: action.payload.data,\r\n                /*\r\n                  function () {\r\n                    return jsonArraysToStrArrays(action.payload.categories);\r\n                  } */\r\n                  errCode: action.type ,\r\n                };\r\n        case \"GET_CATEGORIES_FAILURE\":\r\n            return {\r\n                ...state,\r\n                data: null,\r\n                isLoading: false,\r\n                isLoaded: false ,\r\n                errCode: action.type ,\r\n            };\r\n        default:\r\n            throw new Error(`Unknown action: ${action.type}`);\r\n    }\r\n}\r\n\r\n\r\n// module.exports = \r\nexport default {\r\n\r\n    useReducer : ()=>{\r\n        return useReducer(reducer,initialDbState)\r\n     } ,\r\n     \r\n    CourseCategories: {\r\n        \r\n        getCategories: (dispatch) => {\r\n            dispatch({\r\n                type: \"GET_CATEGORIES_REQUEST\"\r\n            });\r\n            const url =\r\n                \"http://localhost:8081/getCategories\";\r\n            axios\r\n                .get(url)\r\n                .then((response) => {\r\n                    dispatch({\r\n                        type: \"GET_CATEGORIES_SUCCESS\",\r\n                        payload: {\r\n                            data: response.data\r\n                        }\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                    dispatch({\r\n                        type: \"GET_CATEGORIES_FAILURE\"\r\n                    });\r\n                });\r\n        }\r\n    },\r\n\r\n}","import { Layout, Menu, Breadcrumb } from 'antd';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport '../components/styles.css';\r\n\r\nimport DB from '../model/Database'\r\n\r\n\r\nconst CourseCategories = DB.CourseCategories;\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\n\r\n\r\nexport const CourseCategoriesView = () => {\r\n\r\n/* Need to be define when using database */\r\n\r\n/* inside dbState\r\nconst dbState = {\r\n    data: null,\r\n    isLoading: false,\r\n    isLoaded: false,\r\n    errCode : true,\r\n};\r\n*/\r\n    const [state, setState] =\r\n        useState({});\r\n\r\n    const [dbState, dispatch] = DB.useReducer();\r\n \r\n    useEffect(() => {\r\n        CourseCategories.getCategories(dispatch);\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        setState(dbState)\r\n    }, [dbState]);\r\n    \r\n/*-----------------------------------------*/\r\n    const print = () => {\r\n        /*\r\n        var values  = categories.map((item) => {\r\n            \r\n            var value = Object.values(item)\r\n            return value\r\n        }); */\r\n        console.log(state.data)\r\n    }\r\n\r\n    const createIUObj = (jsonArray) => {\r\n\r\n        if (jsonArray == null)\r\n            return null\r\n\r\n        let tmp = {}\r\n        let id = 0\r\n        let keys = []\r\n        let uiObj = jsonArray.map(item => {\r\n            id++;\r\n            keys = Object.keys(item)\r\n            tmp = { key: id.toString(), txt: item[keys[0]] }\r\n            return tmp;\r\n        })\r\n\r\n\r\n        return uiObj;\r\n    }\r\n\r\n    const uiObjList = state.data ?\r\n        createIUObj(state.data).map(item => {\r\n            return (\r\n                <SubMenu key={item.key} title={item.txt}>\r\n                    {    /*\r\n            <Menu.Item key=\"1\">option1</Menu.Item>\r\n            <Menu.Item key=\"2\">option2</Menu.Item>\r\n            <Menu.Item key=\"3\">option3</Menu.Item>\r\n            <Menu.Item key=\"4\">option4</Menu.Item>\r\n            */}\r\n\r\n                </SubMenu>\r\n            )\r\n        }) : null\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {state.isLoaded &&\r\n                <Sider width={200} className=\"site-layout-background\">\r\n\r\n                    <Menu\r\n                        mode=\"inline\"\r\n                        defaultSelectedKeys={['1']}\r\n                        defaultOpenKeys={['sub1']}\r\n                        style={{ height: '100%', borderRight: 0 }}\r\n                    >\r\n                        {\r\n                            uiObjList\r\n                        }\r\n                    </Menu>\r\n                </Sider>\r\n            }\r\n        </div>)\r\n\r\n}\r\n","import { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\r\n\r\nimport './styles.css';\r\n\r\n\r\nimport { Input, Space } from 'antd';\r\nimport { AudioOutlined } from '@ant-design/icons';\r\n\r\n\r\nimport {CourseCategoriesView} from '../views/CourseCategories'\r\n\r\nimport React, { useEffect, useContext, useState } from \"react\";\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst suffix = (\r\n    <AudioOutlined\r\n        style={{\r\n            fontSize: 16,\r\n            color: '#1890ff',\r\n        }}\r\n    />\r\n);\r\n\r\nconst onSearch = value => console.log(value);\r\n\r\nconst handleClick = e => {\r\n    console.log('click ', e);\r\n};\r\n\r\nconst SideMenuLayout = () => {\r\n    \r\n    const items = [\r\n        {\r\n            key: '1',\r\n            txt: 'Course Catalog',\r\n        },\r\n        {\r\n            key: '2',\r\n            txt: 'Course Categories',\r\n        },\r\n        {\r\n            key: '3',\r\n            txt: 'Learning Pathways',\r\n        },\r\n\r\n    ]\r\n\r\n    return (\r\n        <Layout>\r\n            <Header className=\"header\">\r\n                <div className=\"logo\" />\r\n                <Menu\r\n                    theme=\"dark\"\r\n                    mode=\"horizontal\"\r\n                    onClick={handleClick}\r\n                    defaultSelectedKeys={['2']}\r\n                >\r\n                    {\r\n                        items.map(item => {\r\n                            return (\r\n                                <Menu.Item key={item.key}>{item.txt}</Menu.Item>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                    <Menu.Item key=\"4\">\r\n                        <Search placeholder=\"course code / keywords \" allowClear onSearch={onSearch} style={{ width: 300, marginTop: 18 }} />\r\n                    </Menu.Item>\r\n\r\n                </Menu>\r\n\r\n            </Header>\r\n            <Layout>\r\n                <CourseCategoriesView/>\r\n                <Layout style={{ padding: '0 24px 24px' }}>\r\n                    {/*\r\n                    <Breadcrumb style={{ margin: '16px 0' }}>\r\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>List</Breadcrumb.Item>\r\n                        <Breadcrumb.Item>App</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    */}\r\n                    <Content\r\n                        className=\"site-layout-background\"\r\n                        style={{\r\n                            padding: 24,\r\n                            margin: 0,\r\n                            height: 500,\r\n                        }}\r\n                    >\r\n                        Content\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default SideMenuLayout;","import { Layout, Menu } from 'antd';\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport React from \"react\";\r\n\r\nimport './styles.css';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nexport class CustomTriggerMenu extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Header className=\"header\">\r\n          <div className=\"logo\" />\r\n        </Header>\r\n        <Layout>\r\n          <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\r\n            <div className=\"logo\" />\r\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n              <Menu.Item key=\"1\" icon={<UserOutlined />}>\r\n                nav 1\r\n              </Menu.Item>\r\n              <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\r\n                nav 2\r\n              </Menu.Item>\r\n              <Menu.Item key=\"3\" icon={<UploadOutlined />}>\r\n                nav 3\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Sider>\r\n          <Layout className=\"site-layout\">\r\n            <Header className=\"site-layout-background\" style={{ padding: 0 }}>\r\n              {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n                className: 'trigger',\r\n                onClick: this.toggle,\r\n              })}\r\n            </Header>\r\n            <Content\r\n              className=\"site-layout-background\"\r\n              style={{\r\n                margin: '24px 16px',\r\n                padding: 24,\r\n                minHeight: 280,\r\n              }}\r\n            >\r\n              Content\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import logo from './logo.svg';\n//import './App.css';\nimport SideMenuLayout from './components/SideMenuLayout'\nimport { CustomTriggerMenu } from './components/CustomTriggerMenu'\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Resizable, ResizableBox } from 'react-resizable';\nimport { Layout, Avatar, Menu, Breadcrumb, Button } from 'antd';\nimport Title from 'antd/lib/typography/Title';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport Icon from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nconst { Header, Footer, Sider, Content } = Layout;\n\n\n\nfunction App() {\n  return (\n    <ResizableBox className=\"box\" width={1200} >\n      <SideMenuLayout />\n      </ResizableBox>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}